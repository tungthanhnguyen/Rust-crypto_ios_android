[package]
name = "crypto-demo"
version = "0.1.0"
authors = ["tungthanhnguyen"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[build-dependencies]
rust_crypto = { version = "0.1.3", path = "../../Backend/rust_crypto" }

[dependencies]
wasm-bindgen = "0.2.67"
rust_crypto = { version = "0.1.3", path = "../../Backend/rust_crypto" }
rustc-serialize = { version = "0.3.24", path = "../../Backend/libs/rustc-serialize-0.3.24" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

# [dependencies.wasm-opt]
# wasm-opt = false

[dependencies.web-sys]
version = "0.3.44"
features = ["console"]

[dev-dependencies]
wasm-bindgen-test = "0.3.17"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
